---
title: Scaling Patterns - Caching and Databases
desc: Database Partitioning and Caching
homework: 1) Read article and watch video, submit answers to warmup questions on Latte; 2) Complete nT 0.4
cat: scale
---
<%= homework_hdr %>
* Watch and Read: [Basics of Database Sharding](https://youtu.be/W6pFKihvqH4). and [5 Early Lessons from Rapid High Availability Scaling](http://mikepackdev.com/blog_posts/40-5-early-lessons-from-rapid-high-availability-scaling-with-rails). Don't be concerned that Rails is mentioned, the concepts and principles are fundamental. Please read this and watch this material closely, it is quite important. <%= deliverable "Answer warmups in Latte" %>
* Finish everything under nT 0.4 and before.  Do the work in your portfolio, submit it to github. <%= team_deliverable "Also zip together your directory and post it to latte."%>. **GRADED FOR PARTICIPATION ONLY**

#### Discussion about homework reading/viewing
* What were some of the key learnings?

#### Some Background
* <%= link_to_lecture :architecting_for_scale %>
* <%= link_to_topic :nt_load_testing %>

#### What is scaling?
* Measuring performance:
  * How many Xs per second?
  * and/orhow long does it take to Y?
* Analysis
  * Instrumentation (basically logging)
  * Deep thought
  * Identify the bottle neck
* Action
  * Remove the bottle neck
* Remember: One of the cardinal "sins" is optimizing early
  * Instead, optimize based on measurement
  * Discover which parts of your product's features is causing a scaling problem
  * Consider which of your techniques might be brought to bear

<%= include_topic :scaling_caching %>
<%= include_topic :scaling_db_tuning %>
<%= include_topic :scaling_db_caching %>
<%= include_topic :scaling_db_partitioning %>

#### Next Class
* Look at homework: <%= link_to_next_lecture %>
