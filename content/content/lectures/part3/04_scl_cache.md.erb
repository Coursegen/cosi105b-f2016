---
title: "Scaling Patterns: Caching"
desc: Caching is one of the first, simplest ways of attacking scale
homework: 1) Read article and watch video, submit answers to warmup questions on Latte; 2) Complete nT 0.4
cat: scale
---
<%= homework_hdr %>
1. <%= partbadge %> <%= codebadge %> Begin work on nanoTwitter 0.4 (<%= link_to_section :nt, :nt_outline %>). This work is all done together as a team. It makes sense to divide up tasks between the team members. All nanoTwitter work, from here on, should happen in your <%= link_to_intro :portfolio %>, directory `/nanotwitter`. nt 0.4 will be due on xxxx.


#### Discussion about homework reading/viewing
* What were some of the key learnings?

#### Review and background
* <%= link_to_lecture :architecting_for_scale %>

#### Review: Achieving Scale
* Measuring performance:
  * How many Xs per second?
  * and/orhow long does it take to Y?
* Analysis
  * Instrumentation (basically logging)
  * Deep thought
  * Identify the bottle neck
* Action
  * Remove the bottle neck
* Remember: One of the cardinal "sins" is optimizing early
  * Instead, optimize based on measurement
  * Discover which parts of your product's features is causing a scaling problem
  * Consider which of your techniques might be brought to bear

<%= include_topic :scaling_caching %>

#### Next Class
* Look at homework: <%= link_to_next_lecture %>
